{"ast":null,"code":"var _jsxFileName = \"C:\\\\fullstack_open_2022\\\\osa1\\\\vapaata_harjoittelua_osa1\\\\src\\\\App.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { useState } from \"react\"; // const Display = ({ counter }) => <div>{counter}</div>;\n// const Button = ({ handleClick, text }) => (\n//   <button onClick={handleClick}> {text} </button>\n// );\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst App = () => {\n  _s();\n\n  const [clicks, setClicks] = useState({\n    left: 0,\n    right: 0\n  });\n  const [allClicks, setAll] = useState([]);\n  console.log(allClicks);\n\n  const handleLeftClick = () => {\n    // State changes have to be done with copies of the orginal state!\n    setClicks({ ...clicks,\n      left: clicks.left + 1\n    });\n    setAll(allClicks.concat(\"l\"));\n  };\n\n  const handleRightClick = () => {\n    setClicks({ ...clicks,\n      right: clicks.right + 1\n    });\n    setAll(allClicks.concat(\"R\"));\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [clicks.left, /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleLeftClick,\n        children: \"left\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleRightClick,\n        children: \"right\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }, this), clicks.right, /*#__PURE__*/_jsxDEV(\"p\", {\n        children: allClicks.join(\" \")\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 5\n  }, this);\n};\n\n_s(App, \"GoBELU0PpY3k8LJ7jp2vVWP1jg0=\");\n\n_c = App;\nexport default App;\n/*\nKäännösvaiheen jälkeen (koodi käännetty JSX:stä Javascriptiksi. Tämän hoitaa Babel).\nJSX lähellä palvelimella käytettäviä templating-kieliä kuten Java Springin yhteydessä käytettävää Thymeleafia. JSX:ssä tagit tulee sulkea toisin kuin vaikka HTML:ssä!\n\n\nconst App = () => {\n  const now = new Date()\n  const a = 10\n  const b = 20\n  return React.createElement(\n    'div',\n    null,\n    React.createElement(\n      'p', null, 'Hello world, it is ', now.toString()\n    ),\n    React.createElement(\n      'p', null, a, ' plus ', b, ' is ', a + b\n    )\n  )\n}\n\n*/\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","App","clicks","setClicks","left","right","allClicks","setAll","console","log","handleLeftClick","concat","handleRightClick","join"],"sources":["C:/fullstack_open_2022/osa1/vapaata_harjoittelua_osa1/src/App.js"],"sourcesContent":["import React from \"react\";\nimport { useState } from \"react\";\n\n// const Display = ({ counter }) => <div>{counter}</div>;\n\n// const Button = ({ handleClick, text }) => (\n//   <button onClick={handleClick}> {text} </button>\n// );\n\nconst App = () => {\n  const [clicks, setClicks] = useState({ left: 0, right: 0 });\n  const [allClicks, setAll] = useState([]);\n\n  console.log(allClicks);\n\n  const handleLeftClick = () => {\n    // State changes have to be done with copies of the orginal state!\n    setClicks({\n      ...clicks,\n      left: clicks.left + 1,\n    });\n    setAll(allClicks.concat(\"l\"));\n  };\n\n  const handleRightClick = () => {\n    setClicks({\n      ...clicks,\n      right: clicks.right + 1,\n    });\n    setAll(allClicks.concat(\"R\"));\n  };\n\n  return (\n    <div>\n      <div>\n        {clicks.left}\n        <button onClick={handleLeftClick}>left</button>\n        <button onClick={handleRightClick}>right</button>\n        {clicks.right}\n        <p>{allClicks.join(\" \")}</p>\n      </div>\n    </div>\n  );\n};\n\nexport default App;\n\n/*\nKäännösvaiheen jälkeen (koodi käännetty JSX:stä Javascriptiksi. Tämän hoitaa Babel).\nJSX lähellä palvelimella käytettäviä templating-kieliä kuten Java Springin yhteydessä käytettävää Thymeleafia. JSX:ssä tagit tulee sulkea toisin kuin vaikka HTML:ssä!\n\n\nconst App = () => {\n  const now = new Date()\n  const a = 10\n  const b = 20\n  return React.createElement(\n    'div',\n    null,\n    React.createElement(\n      'p', null, 'Hello world, it is ', now.toString()\n    ),\n    React.createElement(\n      'p', null, a, ' plus ', b, ' is ', a + b\n    )\n  )\n}\n\n*/\n"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,QAAT,QAAyB,OAAzB,C,CAEA;AAEA;AACA;AACA;;;;AAEA,MAAMC,GAAG,GAAG,MAAM;EAAA;;EAChB,MAAM,CAACC,MAAD,EAASC,SAAT,IAAsBH,QAAQ,CAAC;IAAEI,IAAI,EAAE,CAAR;IAAWC,KAAK,EAAE;EAAlB,CAAD,CAApC;EACA,MAAM,CAACC,SAAD,EAAYC,MAAZ,IAAsBP,QAAQ,CAAC,EAAD,CAApC;EAEAQ,OAAO,CAACC,GAAR,CAAYH,SAAZ;;EAEA,MAAMI,eAAe,GAAG,MAAM;IAC5B;IACAP,SAAS,CAAC,EACR,GAAGD,MADK;MAERE,IAAI,EAAEF,MAAM,CAACE,IAAP,GAAc;IAFZ,CAAD,CAAT;IAIAG,MAAM,CAACD,SAAS,CAACK,MAAV,CAAiB,GAAjB,CAAD,CAAN;EACD,CAPD;;EASA,MAAMC,gBAAgB,GAAG,MAAM;IAC7BT,SAAS,CAAC,EACR,GAAGD,MADK;MAERG,KAAK,EAAEH,MAAM,CAACG,KAAP,GAAe;IAFd,CAAD,CAAT;IAIAE,MAAM,CAACD,SAAS,CAACK,MAAV,CAAiB,GAAjB,CAAD,CAAN;EACD,CAND;;EAQA,oBACE;IAAA,uBACE;MAAA,WACGT,MAAM,CAACE,IADV,eAEE;QAAQ,OAAO,EAAEM,eAAjB;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QAFF,eAGE;QAAQ,OAAO,EAAEE,gBAAjB;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QAHF,EAIGV,MAAM,CAACG,KAJV,eAKE;QAAA,UAAIC,SAAS,CAACO,IAAV,CAAe,GAAf;MAAJ;QAAA;QAAA;QAAA;MAAA,QALF;IAAA;MAAA;MAAA;MAAA;IAAA;EADF;IAAA;IAAA;IAAA;EAAA,QADF;AAWD,CAlCD;;GAAMZ,G;;KAAAA,G;AAoCN,eAAeA,GAAf;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA"},"metadata":{},"sourceType":"module"}