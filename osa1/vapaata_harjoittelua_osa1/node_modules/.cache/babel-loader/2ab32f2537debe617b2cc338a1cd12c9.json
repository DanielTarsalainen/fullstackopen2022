{"ast":null,"code":"var _jsxFileName = \"C:\\\\fullstack_open_2022\\\\osa1\\\\vapaata_harjoittelua_osa1\\\\src\\\\App.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Hello = _ref => {\n  let {\n    name,\n    age\n  } = _ref;\n  // const name = props.name;\n  // const age = props.age;\n  // Deconstruction\n  // const { name, age } = props;\n  // const bornYear = () => new Date().getFullYear() - age;\n  return /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 15,\n    columnNumber: 5\n  }, this);\n};\n\n_c = Hello;\n\nconst App = () => {\n  _s();\n\n  // const a = 10;\n  // const b = 20;\n  // const nimi = \"Jaakko\";t\n  const [counter, setCounter] = useState(0);\n\n  const increaseByOne = () => setCounter(counter + 1);\n\n  const setToZero = () => setCounter(0); // const handleClick = () => {\n  //   console.log(\"clicked\");\n  // };\n  // setTimeout(() => setCounter(counter + 1), 1000);\n\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [counter, /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => setCounter(counter + 1),\n      children: \"plus\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => setCounter(0),\n      children: \"zero\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 5\n  }, this);\n};\n\n_s(App, \"mgO7WMHyhiBnLtH7uw/qAj2Cy9A=\");\n\n_c2 = App;\nexport default App;\n/*\nKäännösvaiheen jälkeen (koodi käännetty JSX:stä Javascriptiksi. Tämän hoitaa Babel).\nJSX lähellä palvelimella käytettäviä templating-kieliä kuten Java Springin yhteydessä käytettävää Thymeleafia. JSX:ssä tagit tulee sulkea toisin kuin vaikka HTML:ssä!\n\n\nconst App = () => {\n  const now = new Date()\n  const a = 10\n  const b = 20\n  return React.createElement(\n    'div',\n    null,\n    React.createElement(\n      'p', null, 'Hello world, it is ', now.toString()\n    ),\n    React.createElement(\n      'p', null, a, ' plus ', b, ' is ', a + b\n    )\n  )\n}\n\n*/\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Hello\");\n$RefreshReg$(_c2, \"App\");","map":{"version":3,"names":["React","useState","Hello","name","age","App","counter","setCounter","increaseByOne","setToZero"],"sources":["C:/fullstack_open_2022/osa1/vapaata_harjoittelua_osa1/src/App.js"],"sourcesContent":["import React from \"react\";\nimport { useState } from \"react\";\n\nconst Hello = ({ name, age }) => {\n  // const name = props.name;\n  // const age = props.age;\n\n  // Deconstruction\n\n  // const { name, age } = props;\n\n  // const bornYear = () => new Date().getFullYear() - age;\n\n  return (\n    <div>\n      {/* <p>\n        Hello {name}, you are {age} years old\n      </p>\n      <p>So you were probably born {bornYear()}</p> */}\n    </div>\n  );\n};\n\nconst App = () => {\n  // const a = 10;\n  // const b = 20;\n  // const nimi = \"Jaakko\";t\n  const [counter, setCounter] = useState(0);\n\n  const increaseByOne = () => setCounter(counter + 1);\n\n  const setToZero = () => setCounter(0);\n\n  // const handleClick = () => {\n  //   console.log(\"clicked\");\n  // };\n\n  // setTimeout(() => setCounter(counter + 1), 1000);\n\n  return (\n    <div>\n      {counter}\n      <button onClick={() => setCounter(counter + 1)}>plus</button>\n      <button onClick={() => setCounter(0)}>zero</button>\n    </div>\n  );\n};\n\nexport default App;\n\n/*\nKäännösvaiheen jälkeen (koodi käännetty JSX:stä Javascriptiksi. Tämän hoitaa Babel).\nJSX lähellä palvelimella käytettäviä templating-kieliä kuten Java Springin yhteydessä käytettävää Thymeleafia. JSX:ssä tagit tulee sulkea toisin kuin vaikka HTML:ssä!\n\n\nconst App = () => {\n  const now = new Date()\n  const a = 10\n  const b = 20\n  return React.createElement(\n    'div',\n    null,\n    React.createElement(\n      'p', null, 'Hello world, it is ', now.toString()\n    ),\n    React.createElement(\n      'p', null, a, ' plus ', b, ' is ', a + b\n    )\n  )\n}\n\n*/\n"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,QAAT,QAAyB,OAAzB;;;AAEA,MAAMC,KAAK,GAAG,QAAmB;EAAA,IAAlB;IAAEC,IAAF;IAAQC;EAAR,CAAkB;EAC/B;EACA;EAEA;EAEA;EAEA;EAEA,oBACE;IAAA;IAAA;IAAA;EAAA,QADF;AAQD,CAlBD;;KAAMF,K;;AAoBN,MAAMG,GAAG,GAAG,MAAM;EAAA;;EAChB;EACA;EACA;EACA,MAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBN,QAAQ,CAAC,CAAD,CAAtC;;EAEA,MAAMO,aAAa,GAAG,MAAMD,UAAU,CAACD,OAAO,GAAG,CAAX,CAAtC;;EAEA,MAAMG,SAAS,GAAG,MAAMF,UAAU,CAAC,CAAD,CAAlC,CARgB,CAUhB;EACA;EACA;EAEA;;;EAEA,oBACE;IAAA,WACGD,OADH,eAEE;MAAQ,OAAO,EAAE,MAAMC,UAAU,CAACD,OAAO,GAAG,CAAX,CAAjC;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAFF,eAGE;MAAQ,OAAO,EAAE,MAAMC,UAAU,CAAC,CAAD,CAAjC;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAHF;EAAA;IAAA;IAAA;IAAA;EAAA,QADF;AAOD,CAvBD;;GAAMF,G;;MAAAA,G;AAyBN,eAAeA,GAAf;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA"},"metadata":{},"sourceType":"module"}