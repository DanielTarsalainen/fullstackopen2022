{"ast":null,"code":"var _jsxFileName = \"C:\\\\fullstack_open_2022\\\\osa1\\\\vapaata_harjoittelua_osa1\\\\src\\\\App.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { useState } from \"react\"; // const Display = ({ counter }) => <div>{counter}</div>;\n// const Button = ({ handleClick, text }) => (\n//   <button onClick={handleClick}> {text} </button>\n// );\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst App = () => {\n  _s();\n\n  const [clicks, setClicks] = useState({\n    left: 0,\n    right: 0\n  });\n\n  const handleLeftClick = () => {\n    const newClicks = {\n      left: clicks.left + 1,\n      right: clicks.right\n    };\n    setClicks(newClicks);\n  };\n\n  const handleRightClick = () => {\n    const newClicks = {\n      left: clicks.left,\n      right: clicks.right + 1\n    };\n    setClicks(newClicks);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [left, /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleLeftClick,\n        children: \"left\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setRight(right + 1),\n        children: \"right\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 9\n      }, this), right]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 5\n  }, this);\n};\n\n_s(App, \"dYiRgjep9VAVQ0w6nJmmudoIRnI=\");\n\n_c = App;\nexport default App;\n/*\nKäännösvaiheen jälkeen (koodi käännetty JSX:stä Javascriptiksi. Tämän hoitaa Babel).\nJSX lähellä palvelimella käytettäviä templating-kieliä kuten Java Springin yhteydessä käytettävää Thymeleafia. JSX:ssä tagit tulee sulkea toisin kuin vaikka HTML:ssä!\n\n\nconst App = () => {\n  const now = new Date()\n  const a = 10\n  const b = 20\n  return React.createElement(\n    'div',\n    null,\n    React.createElement(\n      'p', null, 'Hello world, it is ', now.toString()\n    ),\n    React.createElement(\n      'p', null, a, ' plus ', b, ' is ', a + b\n    )\n  )\n}\n\n*/\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","App","clicks","setClicks","left","right","handleLeftClick","newClicks","handleRightClick","setRight"],"sources":["C:/fullstack_open_2022/osa1/vapaata_harjoittelua_osa1/src/App.js"],"sourcesContent":["import React from \"react\";\nimport { useState } from \"react\";\n\n// const Display = ({ counter }) => <div>{counter}</div>;\n\n// const Button = ({ handleClick, text }) => (\n//   <button onClick={handleClick}> {text} </button>\n// );\n\nconst App = () => {\n  const [clicks, setClicks] = useState({ left: 0, right: 0 });\n\n  const handleLeftClick = () => {\n    const newClicks = {\n      left: clicks.left + 1,\n      right: clicks.right,\n    };\n    setClicks(newClicks);\n  };\n\n  const handleRightClick = () => {\n    const newClicks = {\n      left: clicks.left,\n      right: clicks.right + 1,\n    };\n    setClicks(newClicks);\n  };\n\n  return (\n    <div>\n      <div>\n        {left}\n        <button onClick={handleLeftClick}>left</button>\n        <button onClick={() => setRight(right + 1)}>right</button>\n        {right}\n      </div>\n    </div>\n  );\n};\n\nexport default App;\n\n/*\nKäännösvaiheen jälkeen (koodi käännetty JSX:stä Javascriptiksi. Tämän hoitaa Babel).\nJSX lähellä palvelimella käytettäviä templating-kieliä kuten Java Springin yhteydessä käytettävää Thymeleafia. JSX:ssä tagit tulee sulkea toisin kuin vaikka HTML:ssä!\n\n\nconst App = () => {\n  const now = new Date()\n  const a = 10\n  const b = 20\n  return React.createElement(\n    'div',\n    null,\n    React.createElement(\n      'p', null, 'Hello world, it is ', now.toString()\n    ),\n    React.createElement(\n      'p', null, a, ' plus ', b, ' is ', a + b\n    )\n  )\n}\n\n*/\n"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,QAAT,QAAyB,OAAzB,C,CAEA;AAEA;AACA;AACA;;;;AAEA,MAAMC,GAAG,GAAG,MAAM;EAAA;;EAChB,MAAM,CAACC,MAAD,EAASC,SAAT,IAAsBH,QAAQ,CAAC;IAAEI,IAAI,EAAE,CAAR;IAAWC,KAAK,EAAE;EAAlB,CAAD,CAApC;;EAEA,MAAMC,eAAe,GAAG,MAAM;IAC5B,MAAMC,SAAS,GAAG;MAChBH,IAAI,EAAEF,MAAM,CAACE,IAAP,GAAc,CADJ;MAEhBC,KAAK,EAAEH,MAAM,CAACG;IAFE,CAAlB;IAIAF,SAAS,CAACI,SAAD,CAAT;EACD,CAND;;EAQA,MAAMC,gBAAgB,GAAG,MAAM;IAC7B,MAAMD,SAAS,GAAG;MAChBH,IAAI,EAAEF,MAAM,CAACE,IADG;MAEhBC,KAAK,EAAEH,MAAM,CAACG,KAAP,GAAe;IAFN,CAAlB;IAIAF,SAAS,CAACI,SAAD,CAAT;EACD,CAND;;EAQA,oBACE;IAAA,uBACE;MAAA,WACGH,IADH,eAEE;QAAQ,OAAO,EAAEE,eAAjB;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QAFF,eAGE;QAAQ,OAAO,EAAE,MAAMG,QAAQ,CAACJ,KAAK,GAAG,CAAT,CAA/B;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QAHF,EAIGA,KAJH;IAAA;MAAA;MAAA;MAAA;IAAA;EADF;IAAA;IAAA;IAAA;EAAA,QADF;AAUD,CA7BD;;GAAMJ,G;;KAAAA,G;AA+BN,eAAeA,GAAf;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA"},"metadata":{},"sourceType":"module"}